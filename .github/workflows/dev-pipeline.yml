name: Dev Pipeline
description: CI/CD pipeline for the development environment

on:
  push:
    branches:
      - dev

env:
  AWS_REGION: us-east-1

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: dev
    outputs:
      flask_ecr_url: ${{ steps.ecr_output.outputs.flask_ecr_url }}
      nextjs_ecr_url: ${{ steps.ecr_output.outputs.nextjs_ecr_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
          terraform_wrapper: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init and Apply (Dev)
        working-directory: ./Terraform/terraform/Environments/Development
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Get ALB DNS Output
        id: alb
        working-directory: ./Terraform/terraform/Environments/Development
        run: |
          ALB_URL=$(terraform output -raw alb_dns_name)
          echo "ALB_URL=$ALB_URL" >> $GITHUB_ENV

      - name: Extract ECR URLs
        id: ecr_output
        working-directory: ./Terraform/terraform/Environments/Development
        run: |
          echo "flask_ecr_url=$(terraform output -raw flask_repo_url)" >> $GITHUB_OUTPUT
          echo "nextjs_ecr_url=$(terraform output -raw nextjs_repo_url)" >> $GITHUB_OUTPUT
         
  ecr:
    name: Build & Push Docker Images
    needs: terraform
    runs-on: ubuntu-latest
    environment: dev

    env:
      FLASK_ECR_URL: ${{ secrets.FLASK_ECR_URL }}
      NEXTJS_ECR_URL: ${{ secrets.NEXTJS_ECR_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Debug ECR URL
        run: echo "FLASK_ECR_URL=${{ env.FLASK_ECR_URL }}"
    
      - name: Login to Amazon Flask ECR repo
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{secrets.ECR_REGISTRY}}
          
      - name: Build and Push Flask App
        run: |
          docker build -t flask-app ./backend
          docker tag flask-app:latest $FLASK_ECR_URL:latest
          docker push $FLASK_ECR_URL:latest

      - name: Build and Push Next.js App
        run: |
          docker build -t nextjs-app ./frontend
          docker tag nextjs-app:latest $NEXTJS_ECR_URL:latest
          docker push $NEXTJS_ECR_URL:latest
