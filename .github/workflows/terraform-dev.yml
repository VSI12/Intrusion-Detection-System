name: Terraform Dev Pipeline
description: CI/CD pipeline for the AWS development infrastructure

on:
  push:
    branches:
      - dev
    paths:
      - '.github/workflows/terraform-dev.yml'
      - './Terraform/terraform/Environments/Development/**'

env:
  AWS_REGION: us-east-1

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
          terraform_wrapper: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init and Apply (Dev)
        working-directory: ./Terraform/terraform/Environments/Development
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Export Terraform Outputs to Environment
        run: |
          export NEXTJS_REPO=$(terraform output -raw nextjs_repo_url || echo "")
          export FLASK_REPO=$(terraform output -raw flask_repo_url || echo "")
      
          if [ -z "$NEXTJS_REPO" ] || [ -z "$FLASK_REPO" ]; then
            echo " Missing Terraform outputs. Did you run terraform apply?"
            exit 1
          fi
      
          echo "ECR_FRONTEND_URL=$NEXTJS_REPO" >> $GITHUB_ENV
          echo "ECR_BACKEND_URL=$FLASK_REPO" >> $GITHUB_ENV
        
        
         
  